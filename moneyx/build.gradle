buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
        applicationDefaultJvmArgs = [ '-XX:MaxPermSize=256m -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled -XX:+HeapDumpOnOutOfMemoryError -Xmx256m -Dfile.encoding=utf-8' ]
    }
    repositories {
        mavenCentral()
    }
    dependencies {
	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	classpath("io.spring.gradle:dependency-management-plugin")
	classpath("org.owasp.encoder:encoder:1.2")
	classpath("org.owasp.encoder:encoder-jsp:1.2")
	classpath("org.jsoup:jsoup:1.9.2")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 
apply plugin: 'application'

jar {
    baseName = 'moneyx'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	//maven { url 'https://repo.spring.ie/libs-milestone' }
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.hibernate:hibernate-core")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.security:spring-security-taglibs")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("javax.servlet:jstl:1.2")
    compile("com.h2database:h2")
    compile("org.owasp.encoder:encoder:1.2")
    compile("org.owasp.encoder:encoder-jsp:1.2")
    compile 'com.google.guava:guava:19.0'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework:spring-test")
    testCompile("org.springframework.security:spring-security-test")
    testCompile("net.sourceforge.htmlunit:htmlunit")
    testCompile("org.jsoup:jsoup:1.9.2")
    //testCompile("org.seleniumhq.selenium:selenium-server")
    //testCompile("org.seleniumhq.selenium:selenium-htmlunit-driver")
    //testCompile("org.seleniumhq.selenium:selenium-support")
    runtime("mysql:mysql-connector-java")
    runtime("org.apache.tomcat.embed:tomcat-embed-jasper")
}

springBoot {
    mainClass = 'com.nvisium.moneyx.MoneyxApplication'
}

bootRun {
    main = 'com.nvisium.moneyx.MoneyxApplication'
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

task go (dependsOn: [assemble, run]) << {
	println 'running go';
}

test {
	testLogging {
		// Show which tests are run in command-line output
		events 'started', 'passed'
	}
}
